{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Drive\\\\Shubham\\\\Expo\\\\Dictionary App (Offline)\\\\DictionaryApp-Offiline-Version-Template-main\\\\screens\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header } from \"react-native-elements\";\nimport dictionary from \"../database\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n\n    _this.getWord = function (text) {\n      var text = text.toLowerCase();\n\n      try {\n        var word = dictionary[text][\"word\"];\n        var lexicalCategory = dictionary[text][\"lexicalCategory\"];\n        var definition = dictionary[text][\"definition\"];\n\n        _this.setState({\n          word: word,\n          lexicalCategory: lexicalCategory,\n          definition: definition\n        });\n      } catch (err) {\n        alert(\"Sorry This word is not available for now\");\n\n        _this.setState({\n          text: \"\",\n          isSearchPressed: false\n        });\n      }\n    };\n\n    _this.state = {\n      text: \"\",\n      isSearchPressed: false,\n      isLoading: false,\n      word: \"Loading...\",\n      lexicalCategory: \"\",\n      definition: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          borderWidth: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        backgroundColor: \"purple\",\n        centerComponent: {\n          text: \"Pocket Dictionary\",\n          style: {\n            color: \"#fff\",\n            fontSize: 20\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.inputBoxContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            text: text,\n            isSearchPressed: false,\n            word: \"Loading...\",\n            lexicalCategory: \"\",\n            examples: [],\n            defination: \"\"\n          });\n        },\n        value: this.state.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.setState({\n            isSearchPressed: true\n          });\n\n          _this2.getWord(_this2.state.text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.searchText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, \"Search\"))), React.createElement(View, {\n        style: styles.outputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, this.state.isSearchPressed && this.state.word === \"Loading...\" ? this.state.word : \"\"), this.state.word !== \"Loading...\" ? React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \" Word : \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, this.state.word)), React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \" Type : \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, this.state.lexicalCategory)), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          flexWrap: \"wrap\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, \" Definition : \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, this.state.de))) : null));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  inputBoxContainer: {\n    flex: 0.3,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputBox: {\n    width: \"80%\",\n    alignSelf: \"center\",\n    height: 40,\n    textAlign: \"center\",\n    borderWidth: 4\n  },\n  searchButton: {\n    width: \"40%\",\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10\n  },\n  searchText: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  outputContainer: {\n    flex: 0.7,\n    alignItems: \"center\"\n  },\n  detailsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  detailsTitle: {\n    color: \"orange\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/Drive/Shubham/Expo/Dictionary App (Offline)/DictionaryApp-Offiline-Version-Template-main/screens/HomeScreen.js"],"names":["React","Component","Header","dictionary","HomeScreen","getWord","text","toLowerCase","word","lexicalCategory","definition","setState","err","alert","isSearchPressed","state","isLoading","flex","borderWidth","style","color","fontSize","styles","inputBoxContainer","inputBox","examples","defination","searchButton","searchText","outputContainer","justifyContent","marginLeft","detailsContainer","detailsTitle","flexDirection","flexWrap","de","StyleSheet","create","alignItems","width","alignSelf","height","textAlign","margin","borderRadius","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Header } from \"react-native-elements\";\nimport dictionary from \"../database\";\nexport default class HomeScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      isSearchPressed: false,\n      isLoading: false,\n      word: \"Loading...\",\n      lexicalCategory: \"\",\n      definition: \"\",\n    };\n  }\n\n  getWord = (text) => {\n    var text = text.toLowerCase();\n    try {\n      var word = dictionary[text][\"word\"];\n\n      var lexicalCategory = dictionary[text][\"lexicalCategory\"];\n\n      var definition = dictionary[text][\"definition\"];\n\n      this.setState({\n        word: word,\n        lexicalCategory: lexicalCategory,\n        definition: definition,\n      });\n    } catch (err) {\n      alert(\"Sorry This word is not available for now\");\n      this.setState({\n        text: \"\",\n        isSearchPressed: false,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <View style={{ flex: 1, borderWidth: 2 }}>\n        <Header\n          backgroundColor={\"purple\"}\n          centerComponent={{\n            text: \"Pocket Dictionary\",\n            style: { color: \"#fff\", fontSize: 20 },\n          }}\n        />\n        <View style={styles.inputBoxContainer}>\n          <TextInput\n            style={styles.inputBox}\n            onChangeText={(text) => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word: \"Loading...\",\n                lexicalCategory: \"\",\n                examples: [],\n                defination: \"\",\n              });\n            }}\n            value={this.state.text}\n          />\n\n          <TouchableOpacity\n            style={styles.searchButton}\n            onPress={() => {\n              this.setState({ isSearchPressed: true });\n              this.getWord(this.state.text);\n            }}\n          >\n            <Text style={styles.searchText}>Search</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.outputContainer}>\n          <Text style={{ fontSize: 20 }}>\n            {this.state.isSearchPressed && this.state.word === \"Loading...\"\n              ? this.state.word\n              : \"\"}\n          </Text>\n          {this.state.word !== \"Loading...\" ? (\n            <View style={{ justifyContent: \"center\", marginLeft: 10 }}>\n              <View style={styles.detailsContainer}>\n                <Text style={styles.detailsTitle}> Word : </Text>\n                <Text style={{ fontSize: 18 }}>\n                  {/*Display the word here*/}\n                  {this.state.word}\n                </Text>\n              </View>\n              <View style={styles.detailsContainer}>\n                <Text style={styles.detailsTitle}> Type : </Text>\n                <Text style={{ fontSize: 18 }}>\n                  {/*Display the category here*/}\n                  {this.state.lexicalCategory}\n                </Text>\n              </View>\n              <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                <Text style={styles.detailsTitle}> Definition : </Text>\n                <Text style={{ fontSize: 18 }}>\n                  {/*Display the definition here*/}\n                  {this.state.de}\n                </Text>\n              </View>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputBoxContainer: {\n    flex: 0.3,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputBox: {\n    width: \"80%\",\n    alignSelf: \"center\",\n    height: 40,\n    textAlign: \"center\",\n    borderWidth: 4,\n  },\n  searchButton: {\n    width: \"40%\",\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n  },\n  searchText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  outputContainer: {\n    flex: 0.7,\n    alignItems: \"center\",\n  },\n  detailsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  detailsTitle: {\n    color: \"orange\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}